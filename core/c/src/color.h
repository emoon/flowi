#pragma once

#include "types.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Float color

typedef struct FColor {
    float a, r, g, b;
} FColor;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FL_INLINE FColor FColor_new(float a, float r, float g, float b) {
    FColor c = {a, r, g, b};
    return c;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FL_INLINE FColor FColor_new_rgb(float r, float g, float b) {
    FColor c = {0.5f, r, g, b};
    return c;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FL_INLINE u32 FColor_to_u32(FColor c) {
    u32 r = (u32)(c.r * 255.0f);
    u32 g = (u32)(c.g * 255.0f);
    u32 b = (u32)(c.b * 255.0f);
    u32 a = (u32)(c.a * 255.0f);
    return (a << 24) | (r << 16) | (g << 8) | b;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FL_INLINE FColor FColor_lerp(FColor a, FColor b, float t) {
    FColor res;
    res.a = a.a + (b.a - a.a) * t;
    res.r = a.r + (b.r - a.r) * t;
    res.g = a.g + (b.g - a.g) * t;
    res.b = a.b + (b.b - a.b) * t;
    return res;
}
