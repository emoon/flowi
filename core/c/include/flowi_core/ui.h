
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by api_gen. DO NOT EDIT!
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include <stdbool.h>
#include <stdint.h>
#include <string.h>
#include "idx.h"
#include "layout.h"
#include "manual.h"
#include "math_data.h"

struct FlContext;

#ifdef __cplusplus
extern "C" {
#endif

typedef struct FlUi {
    uint32_t dummy;
} FlUi;

void fl_ui_text_impl(struct FlContext* flowi_ctx, FlString text);

FL_INLINE void fl_ui_text_ctx(struct FlContext* flowi_ctx, const char* text) {
    FlString text_ = {text, 1, (uint32_t)strlen(text)};
    fl_ui_text_impl(flowi_ctx, text_);
}

#define fl_ui_text(text_) fl_ui_text_ctx(flowi_ctx, text_)

// Set position for the next ui-element (this is used when [LayoutMode::Manual] is used)
void fl_ui_set_position_impl(struct FlContext* flowi_ctx, FlPos pos);

FL_INLINE void fl_ui_set_position_ctx(struct FlContext* flowi_ctx, FlPos pos) {
    fl_ui_set_position_impl(flowi_ctx, pos);
}

#define fl_ui_set_position(pos) fl_ui_set_position_ctx(flowi_ctx, pos)

// Get the last widget size. This is usually used for doing manual layouting
FlRect fl_ui_get_last_widget_size_impl(struct FlContext* flowi_ctx, FlPos pos);

FL_INLINE FlRect fl_ui_get_last_widget_size_ctx(struct FlContext* flowi_ctx, FlPos pos) {
    return fl_ui_get_last_widget_size_impl(flowi_ctx, pos);
}

#define fl_ui_get_last_widget_size(pos) fl_ui_get_last_widget_size_ctx(flowi_ctx, pos)

#ifdef __cplusplus
}
#endif
