
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by api_gen. DO NOT EDIT!
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include <stdbool.h>
#include <stdint.h>
#include <string.h>
#include "idx.h"
#include "manual.h"
#include "math.h"

struct FlContext;

#ifdef __cplusplus
extern "C" {
#endif

typedef enum FlLayoutDirection {
    FlLayoutDirection_Horizontal = 0,
    FlLayoutDirection_Verticial = 1,
} FlLayoutDirection;

typedef enum FlSizeType {
    FlSizeType_Fixed = 0,
    FlSizeType_Stretch = 1,
} FlSizeType;

// LayoutMode make it possible to select how ui elements are being layed out.
typedef enum FlLayoutMode {
    // Automatic (default) will use [LayoutArea] to do automatic positining. See [LayoutArea] for more info on how to
    // use this.
    FlLayoutMode_Automatic = 0,
    // User will have to use the [Ui::set_position]
    FlLayoutMode_Manual = 1,
} FlLayoutMode;

typedef struct FlSizing {
    int value;
    FlSizeType value_type;
} FlSizing;

typedef uint64_t FlLayoutAreaId;

typedef struct FlLayoutArea {
    FlString name;
    FlSizing width;
    FlSizing height;
    FlLayoutDirection direction;
} FlLayoutArea;

FlLayoutAreaId fl_layout_area_create_impl(struct FlContext* flowi_ctx, FlString name, FlLayoutArea area);

FL_INLINE FlLayoutAreaId fl_layout_area_create_ctx(struct FlContext* flowi_ctx, const char* name, FlLayoutArea area) {
    FlString name_ = {name, 1, (uint32_t)strlen(name)};
    return fl_layout_area_create_impl(flowi_ctx, name_, area);
}

#define fl_layout_area_create(name_, area) fl_layout_area_create_ctx(flowi_ctx, name_, area)

FlLayoutAreaId fl_layout_area_from_children_impl(struct FlContext* flowi_ctx, FlString name, FlLayoutArea children,
                                                 uint32_t children_size, int16_t row, int16_t cols);

FL_INLINE FlLayoutAreaId fl_layout_area_from_children_ctx(struct FlContext* flowi_ctx, const char* name,
                                                          FlLayoutArea children, uint32_t children_size, int16_t row,
                                                          int16_t cols) {
    FlString name_ = {name, 1, (uint32_t)strlen(name)};
    return fl_layout_area_from_children_impl(flowi_ctx, name_, children, children_size, row, cols);
}

#define fl_layout_area_from_children(name_, children, children_size, row, cols) \
    fl_layout_area_from_children_ctx(flowi_ctx, name_, children, children_size, row, cols)

void fl_layout_area_set_layout_mode_impl(struct FlContext* flowi_ctx, FlLayoutMode mode);

FL_INLINE void fl_layout_area_set_layout_mode_ctx(struct FlContext* flowi_ctx, FlLayoutMode mode) {
    fl_layout_area_set_layout_mode_impl(flowi_ctx, mode);
}

#define fl_layout_area_set_layout_mode(mode) fl_layout_area_set_layout_mode_ctx(flowi_ctx, mode)

#ifdef __cplusplus
}
#endif
