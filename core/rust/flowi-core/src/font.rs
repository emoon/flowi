// This file is auto-generated by api_gen. DO NOT EDIT!

#[allow(unused_imports)]
use crate::*;

extern "C" {
    fn fl_font_new_from_file_impl(
        filename: FlString,
        font_size: u32,
        placement_mode: FontPlacementMode,
    ) -> Font;
    fn fl_font_new_from_memory_impl(
        name: FlString,
        data: *mut u8,
        font_size: u32,
        placement_mode: FontPlacementMode,
    ) -> Font;
    fn fl_font_set_impl(font: Font);
    fn fl_font_set_with_size_impl(size: u32);
    fn fl_font_destroy_impl(font: Font);
}

/// Allows the user to select how accurate the glyph placement should be.
/// The list has a the fastest (CPU performance wise) first (Monospace) and the slowest (Accurate) last
/// Rule of thumb is:
/// Auto (Same as basic)
/// Monospaced (code/fixed size fonts) - use Monospace mode
/// Regular Latin text - use Basic mode
/// Hebrew and other complex languages that require accurate layout - Use accurate
#[repr(C)]
pub enum FontPlacementMode {
    /// Let the library decide the mode (default)
    Auto = 0,
    /// Used for regular Latin based text
    Basic = 0,
    /// Used for fixed-width monospaces fonts (Fastest)
    Mono = 1,
    /// Used for accurate glyph placement (uses the Harfbuzz lib thus is the slowest mode)
    Accurate = 2,
}

type Font = u64;
