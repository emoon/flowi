
// This file is auto-generated by api_gen. DO NOT EDIT!

#[allow(unused_imports)]
use crate::*;

extern "C" {
    fn fl_image_new_from_file_impl(filename: FlString) -> ImageId;
    fn fl_image_load_from_memory_impl(name: FlString, data: u8) -> ImageId;
    fn fl_image_get_image_data_impl(image: ImageId) -> Image;
    fn fl_image_destroy_impl(image: ImageId);
}

type ImageId = u64;

#[repr(C)]
pub struct Image {
    /// width of the image
    width: u32,
    /// height of the Image
    height: u32,
}

impl Image {
/// Load image from file. Supported formats are:
/// JPEG baseline & progressive (12 bpc/arithmetic not supported, same as stock IJG lib)
/// PNG 1/2/4/8/16-bit-per-channel
/// TGA
/// BMP non-1bpp, non-RLE
/// PSD (composited view only, no extra channels, 8/16 bit-per-channel)
/// GIF
/// HDR (radiance rgbE format)
/// PIC (Softimage PIC)
/// PNM (PPM and PGM binary only)
pub fn new_from_file(filename: &str) {
unsafe { 
fl_image_new_from_file_impl(FlString::new(filename));
}
}

/// Load image from memory. Supported formats are:
/// JPEG baseline & progressive (12 bpc/arithmetic not supported, same as stock IJG lib)
/// PNG 1/2/4/8/16-bit-per-channel
/// TGA
/// BMP non-1bpp, non-RLE
/// PSD (composited view only, no extra channels, 8/16 bit-per-channel)
/// GIF
/// HDR (radiance rgbE format)
/// PIC (Softimage PIC)
/// PNM (PPM and PGM binary only)
