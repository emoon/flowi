
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by api_gen. DO NOT EDIT!
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include <stdbool.h>
#include <stdint.h>
#include <string.h>
#include "manual.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef enum FlSvgFlags {
    // Render the SVG image using RGBA format
    FlSvgFlags_Rgba = 0,
    // Render the SVG image using Alpha only
    FlSvgFlags_Alpha = 1,
} FlSvgFlags;

typedef struct FlImageInfo {
    // width of the image
    uint32_t width;
    // height of the Image
    uint32_t height;
} FlImageInfo;

typedef uint64_t FlImage;

// Load image from file. Supported formats are:
// JPEG baseline & progressive (12 bpc/arithmetic not supported, same as stock IJG lib)
// PNG 1/2/4/8/16-bit-per-channel
// TGA
// BMP non-1bpp, non-RLE
// PSD (composited view only, no extra channels, 8/16 bit-per-channel)
// GIF
// HDR (radiance rgbE format)
// PIC (Softimage PIC)
// PNM (PPM and PGM binary only)
// Load image from memory. Supported formats are:
// JPEG baseline & progressive (12 bpc/arithmetic not supported, same as stock IJG lib)
// PNG 1/2/4/8/16-bit-per-channel
// TGA
// BMP non-1bpp, non-RLE
// PSD (composited view only, no extra channels, 8/16 bit-per-channel)
// GIF
// HDR (radiance rgbE format)
// PIC (Softimage PIC)
// PNM (PPM and PGM binary only)
// Load SVG from file
// Load SVG from memory
// Get data amout the image
static FlImageInfo* fl_image_get_info(FlImage image);

#include "image.inl"

#ifdef __cplusplus
}
#endif
