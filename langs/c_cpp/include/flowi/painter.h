
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by api_gen. DO NOT EDIT!
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include <stdbool.h>
#include <stdint.h>
#include <string.h>
#include "image.h"
#include "layout.h"
#include "manual.h"
#include "math_data.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef enum FlPainterLayer {
    FlPainterLayer_ActiveWindow = 0,
    FlPainterLayer_Background = 1,
    FlPainterLayer_Foreground = 2,
} FlPainterLayer;

struct FlPainterApi;

struct FlPainter;

// The current layer to draw on. Default is ActiveWindow.
static void fl_painter_set_layer(FlPainterLayer layer);

// Draw a line from `pos` to `end` with the given `color` and `thickness`.
static void fl_painter_draw_line(FlVec2 p1, FlVec2 p2, FlColor color, float thickness);

// Draw a rectangle with the given `color` and `rounding`.
static void fl_painter_draw_rect(FlVec2 p1, FlVec2 p2, FlColor color, float rounding);

// Draw a filled rectangle with the given `color` and `rounding`.
static void fl_painter_draw_rect_filled(FlVec2 p1, FlVec2 p2, FlColor color, float rounding);

// Draw a rectangle with a gradient
static void fl_painter_draw_rect_filled_gradient(FlVec2 p1, FlVec2 p2, FlColor left, FlColor right, FlColor btm_right,
                                                 FlColor btm_left);

#include "painter.inl"

#ifdef __cplusplus
}
#endif
