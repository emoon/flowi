
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This file is auto-generated by api_gen. DO NOT EDIT!
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include <stdbool.h>
#include <stdint.h>
#include <string.h>
#include "manual.h"
#include "math_data.h"
#include "window.h"

#ifdef __cplusplus
extern "C" {
#endif

struct FlItem;

// Is the last item hovered? (and usable, aka not blocked by a popup, etc.). See ImGuiHoveredFlags for more options.
static bool fl_item_is_hovered(FlHoveredFlags flags);

// Is the last item active? (e.g. button being held, text field being edited. This will continuously return true while
// holding mouse button on an item. _s that don't interact will always return false)
static bool fl_item_is_active();

// Is the last item focused for keyboard/gamepad navigation?
static bool fl_item_is_focused();

// Is the last item hovered and mouse clicked on? (**)  == IsMouseClicked(mouse_button) && Is_Hovered()Important. (**)
// this is NOT equivalent to the behavior of e.g. Button(). Read comments in function definition.
static bool fl_item_is_clicked();

// Is the last item visible? (items may be out of sight because of clipping/scrolling)
static bool fl_item_is_visible();

// Did the last item modify its underlying value this frame? or was pressed? This is generally the same as the "bool"
// return value of many widgets.
static bool fl_item_is_edited();

// Was the last item just made active (item was previously inactive).
static bool fl_item_is_activated();

// Was the last item just made inactive (item was previously active). Useful for Undo/Redo patterns with widgets that
// require continuous editing.
static bool fl_item_is_deactivated();

// Was the last item just made inactive and made a value change when it was active? (e.g. Slider/Drag moved). Useful for
// Undo/Redo patterns with widgets that require continuous editing. Note that you may get false positives (some widgets
// such as Combo()/ListBox()/Selectable() will return true even when clicking an already selected item).
static bool fl_item_is_deactivated_after_edit();

// Was the last item open state toggled? set by TreeNode().
static bool fl_item_is_toggled_open();

// Is any item hovered?
static bool fl_item_is_any_hovered();

// Is any item active?
static bool fl_item_is_any_active();

// Is any item focused?
static bool fl_item_is_any_focused();

// Get upper-left bounding rectangle of the last item (screen space)
static FlVec2 fl_item_get_rect_min();

// Get lower-right bounding rectangle of the last item (screen space)
static FlVec2 fl_item_get_rect_max();

// Get size of last item
static FlVec2 fl_item_get_rect_size();

// Allow last item to be overlapped by a subsequent item. sometimes useful with invisible buttons, selectables, etc. to
// catch unused area.
static void fl_item_set_allow_overlap();

#include "item.inl"

#ifdef __cplusplus
}
#endif
